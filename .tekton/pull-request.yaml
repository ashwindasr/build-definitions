---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: build-definitions-pull-request
  annotations:
    pipelinesascode.tekton.dev/on-event: "pull_request"
    pipelinesascode.tekton.dev/on-target-branch: "main"
    pipelinesascode.tekton.dev/task: "[tasks/git-clone.yaml, .tekton/tasks/buildah.yaml, .tekton/tasks/yaml-lint.yaml]"
    pipelinesascode.tekton.dev/task-2: "yaml-lint"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
    - name: e2e_test_namespace
      value: build-templates-e2e
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
      - name: e2e_test_namespace
    workspaces:
      - name: workspace
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: workspace
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      - name: yaml-lint-check
        runAfter:
          - fetch-repository
        taskRef:
          name: yaml-lint
        workspaces:
          - name: shared-workspace
            workspace: workspace
        params:
        - name: args
          value: ["."]
      - name: build-container
        runAfter:
          - yaml-lint-check
        params:
          - name: IMAGE
            value: quay.io/redhat-appstudio/pull-request-builds:build-definitions-utils-{{revision}}
          - name: CONTEXT
            value: appstudio-utils
        taskRef:
          name: buildah
        workspaces:
          - name: source
            workspace: workspace
      - name: build-bundles
        params:
          - name: revision
            value: "{{ revision }}"
          - name: e2e_test_namespace
            value: $(params.e2e_test_namespace)
        runAfter:
          - build-container
        workspaces:
          - name: source
            workspace: workspace
        taskSpec:
          params:
            - name: revision
              type: string
            - name: e2e_test_namespace
              type: string
          steps:
            - name: build-bundles
              image: quay.io/redhat-appstudio/pull-request-builds:build-definitions-utils-{{revision}}
              workingDir: $(workspaces.source.path)
              script: |
                #!/usr/bin/env bash
                MY_QUAY_USER=redhat-appstudio \
                TEST_REPO_NAME=pull-request-builds \
                BUILD_TAG=$(params.revision) \
                SKIP_BUILD=1 \
                INSTALL_BUNDLE_NS=$(params.e2e_test_namespace) \
                hack/build-and-push.sh
          workspaces:
            - name: source
      - name: e2e-test
        params:
          - name: e2e_test_namespace
            value: $(params.e2e_test_namespace)
        runAfter:
          - build-bundles
        taskSpec:
          params:
            - name: e2e_test_namespace
              type: string
          steps:
            - name: e2e-test
              image: quay.io/redhat-appstudio/pull-request-builds:e2e-d67687af6f8932c58f05e04300c30e732cd75eab
              imagePullPolicy: Always
              args: [
                "--ginkgo.label-filter=build-templates-e2e",
                "--ginkgo.progress",
                "--ginkgo.v",
                "--ginkgo.no-color"
              ]
              env:
              - name: QUAY_E2E_ORGANIZATION
                value: redhat-appstudio
              - name: E2E_APPLICATIONS_NAMESPACE
                value: "$(params.e2e_test_namespace)"
    finally:
      - name: e2e-cleanup
        params:
          - name: e2e_test_namespace
            value: $(params.e2e_test_namespace)
        taskSpec:
          params:
            - name: e2e_test_namespace
              type: string
          steps:
            - name: e2e-cleanup
              image: registry.redhat.io/openshift4/ose-cli:v4.10
              script: |
                #!/usr/bin/env bash
                # Perform cleanup of resources created by e2e test run
                # TODO: Application and Component names should be unique, so the cleanup task doesn't affect other pipelineruns
                oc delete --ignore-not-found deployment --all -n $(params.e2e_test_namespace)
                oc delete --ignore-not-found eventlisteners --all -n $(params.e2e_test_namespace)
  workspaces:
    - name: workspace
      persistentVolumeClaim:
        claimName: app-studio-default-workspace
      subPath: build-definitions-{{ revision }}
